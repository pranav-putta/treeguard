{"version":3,"sources":["logo.svg","screens/Launch.tsx","Alg.tsx","screens/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Launch","history","useHistory","setTimeout","push","className","src","logo","alt","style","fontFamily","fontSize","fontWeight","calculateDistance","a","b","x","Math","abs","meta","loc","latitude","y","longitude","sqrt","pow","location","address","lat","lng","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","colors","light","dark","db","firebase","firestore","collection","get","then","res","docs","Marker","props","node","color","pulseDot","keyframes","pulseRing","ringAnim","dotAnim","size","Ring","styled","div","Dot","onClick","onPress","mapOptions","maps","streetViewControl","scaleControl","fullscreenControl","panControl","draggable","styles","featureType","elementType","stylers","visibility","gestureHandling","disableDoubleClickZoom","minZoom","maxZoom","draggableCursor","draggingCursor","mapTypeControl","mapTypeId","MapTypeId","SATELLITE","mapTypeControlOptions","MapTypeControlStyle","HORIZONTAL_BAR","position","ControlPosition","BOTTOM_CENTER","mapTypeIds","zoomControl","clickableIcons","Home","notifCard","display","flexDirection","backgroundColor","width","maxWidth","padding","borderRadius","top","left","marginTop","name","right","toFixed","id","alignItems","height","paddingTop","paddingLeft","paddingBottom","log","length","temp","humidity","co2","justifyContent","setState","notification","undefined","card","margin","state","nodes","selectedNodeIndex","randInRange","start","end","random","skewedRandInRange","simulate","i","lon","j","airquality","timestamp","Date","now","status","collector_id","sender_id","createGraph","index","visited","q","root","data","edges","shift","tmp","simulateGraphProp","graph","current","ct","forEach","val","ind","Promise","resolve","prevColor","classes","navigator","window","initializeApp","copData","doc","bootstrapURLKeys","key","defaultCenter","defaultZoom","options","this","map","arr","bottom","React","Component","App","createBrowserHistory","path","exact","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.67962995.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d564bd83.svg\";","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport logo from \"../logo.svg\";\nimport \"./Launch.css\";\n\nfunction Launch() {\n  const history = useHistory();\n  \n  setTimeout(function () {\n    history.push(\"/home\");\n  }, 2000);\n\n  return (\n    <div className=\"Launch\">\n      <header className=\"Launch-header\">\n        <img src={logo} className=\"Launch-logo\" alt=\"logo\" />\n        <p\n          style={{ fontFamily: \"sans-serif\", fontSize: 36, fontWeight: \"bold\" }}\n        >\n          Welcome to Tree Guard\n        </p>\n        <p>\n          <code>getting things set up...</code>\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default Launch;\n","import { Node } from \"./screens/Home\";\nimport React from \"react\";\n\nexport interface GraphNode {\n  edges: GraphNode[];\n  data: Node;\n  index: number;\n}\nexport interface Graph {\n  root: GraphNode;\n  n: number;\n}\n\nconst threshold = 0.1;\n\nfunction calculateDistance(a: Node, b: Node) {\n  let x = Math.abs(a.meta.loc.latitude - b.meta.loc.latitude);\n  let y = Math.abs(a.meta.loc.longitude - b.meta.loc.longitude);\n  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n}\n\nexport function createGraph(index: number, nodes: Node[]): GraphNode {\n  type Visits = {\n    [index: string]: boolean;\n  };\n  let visited: Visits = {};\n  let q: GraphNode[] = [];\n  visited[nodes[index].meta.name] = true;\n  let root: GraphNode = {\n    data: nodes[index],\n    edges: [],\n    index: index,\n  };\n  q.push(root);\n\n  while (q.length > 0) {\n    let a = q.shift();\n    let edges: GraphNode[] = [];\n    if (a) {\n      for (let i = 0; i < nodes.length; i++) {\n        let b = nodes[i];\n        if (!visited[b.meta.name] && calculateDistance(a.data, b) < threshold) {\n          let tmp = {\n            data: b,\n            edges: [],\n            index: i,\n          };\n          a.edges.push(tmp);\n          q.push(tmp);\n          visited[b.meta.name] = true;\n        }\n      }\n    }\n  }\n  return root;\n}\n","import React from \"react\";\nimport Map, { MapOptions, Maps } from \"google-map-react\";\nimport firebase from \"firebase\";\nimport \"./Home.css\";\nimport { Card, CardBody, Jumbotron } from \"reactstrap\";\nimport \"typeface-roboto\";\nimport styled, { keyframes } from \"styled-components\";\nimport { createGraph, GraphNode } from \"../Alg\";\n\nconst apiKey = \"AIzaSyCJiHvsBg2dVQrVxyEmoNZayjH7m1orWGw\";\nconst location = {\n  address: \"Broxton Rocks, Georgia\",\n  lat: 31.73909,\n  lng: -82.85999,\n};\nconst zoomLevel = 10;\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDmRVqrP68RNSXyjopUz7od5HlGJ4vRLXM\",\n  authDomain: \"treewatch-f6df4.firebaseapp.com\",\n  databaseURL: \"https://treewatch-f6df4.firebaseio.com\",\n  projectId: \"treewatch-f6df4\",\n  storageBucket: \"treewatch-f6df4.appspot.com\",\n  messagingSenderId: \"1087238844150\",\n  appId: \"1:1087238844150:web:40fa1a8ffb6243dfc6c6d7\",\n  measurementId: \"G-N2DG5BH91S\",\n};\n\nconst tempThreshold = 60;\n\nconst colors = {\n  red: {\n    light: \"#ff8a80\",\n    dark: \"#ff5252\",\n  },\n  blue: { light: \"#90caf9\", dark: \"#2196f3\" },\n  propBlack: { light: \"#757575\", dark: \"#424242\" },\n  orange: { light: \"#ffab91\", dark: \"#ff3d00\" },\n  green: {\n    light: \"#69f0ae\",\n    dark: \"#00c853\",\n  },\n};\n\ntype NodeMeta = {\n  name: string;\n  loc: {\n    latitude: number;\n    longitude: number;\n  };\n};\ntype LogItem = {\n  co2: number;\n  collector_id: number;\n  humidity: number;\n  sender_id: number;\n  status: number;\n  temp: number;\n  timestamp: number;\n};\nexport type Node = {\n  meta: NodeMeta;\n  log: LogItem[];\n  color: {\n    light: string;\n    dark: string;\n  };\n};\n\nasync function copData() {\n  const db = firebase.firestore();\n  return db\n    .collection(\"node-data\")\n    .get()\n    .then((res) => {\n      return res.docs;\n    });\n}\n\nfunction Marker(props: {\n  node: Node;\n  onPress: () => void;\n  [index: string]: any;\n}) {\n  let light = \"\",\n    dark = \"\";\n  if (!props.node.color) {\n    light = colors.blue.light;\n    dark = colors.blue.dark;\n  } else {\n    light = props.node.color.light;\n    dark = props.node.color.dark;\n  }\n\n  const delay = 0;\n\n  const pulseDot = keyframes`\n  0%,\n  100% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n`;\n  const pulseRing = keyframes` 0% {\n  transform: scale(0.5);\n}\n80%,\n100% {\n  opacity: 0;\n}`;\n\n  let ringAnim = 2.5;\n  let dotAnim = 1.5;\n  if (props.node.color && props.node.color !== colors.blue) {\n    ringAnim = 1;\n    dotAnim = 0.5;\n  }\n\n  let size = 20;\n  if (props.node.color == colors.red) {\n    size = 40;\n  }\n\n  const Ring = styled.div`\n    animation: ${pulseRing} ${ringAnim}s cubic-bezier(0.215, 0.61, 0.355, 1)\n      infinite;\n    background-color: var(--marker, ${light});\n    border-radius: 60px;\n    content: \"\";\n    display: block;\n    height: 300%;\n    left: -100%;\n    position: relative;\n    top: -100%;\n    width: 300%;\n  `;\n\n  const Dot = styled.div`\n    animation: ${pulseDot} ${dotAnim}s cubic-bezier(0.455, 0.03, 0.515, 0.955) -0.4s\n      infinite;\n    background-color: var(--marker, ${dark});\n    border-radius: 50%;\n    box-sizing: border-box;\n    height: ${size}px;\n    width: ${size}px;\n    cursor: grab;\n  `;\n\n  return (\n    <Dot onClick={props.onPress}>\n      <Ring></Ring>\n    </Dot>\n  );\n}\n\ntype Props = {};\n\ntype State = {\n  nodes: Node[];\n  selectedNodeIndex: number;\n  prevColor?: {\n    light: string;\n    dark: string;\n  };\n  notification?: Node;\n};\nclass Home extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      nodes: [],\n      selectedNodeIndex: -1,\n      prevColor: undefined,\n      notification: undefined,\n    };\n  }\n\n  renderSubscriptionOptions(classes: any) {\n    if (!(\"serviceWorker\" in navigator) && !(\"PushManager\" in window)) {\n      return (\n        <p>\n          Notification feature is supported only in:\n          <br />\n          Chrome Desktop and Mobile (version 50+)\n          <br />\n          Firefox Desktop and Mobile (version 44+)\n          <br />\n          Opera on Mobile (version 37+)\n        </p>\n      );\n    } else {\n      return <div>Enable/Disable GNIB(IRP) Appointment Notifications</div>;\n    }\n  }\n\n  componentDidMount() {\n    firebase.initializeApp(firebaseConfig);\n    copData().then((data) => {\n      let nodes: Node[] = [];\n      data.forEach((doc) => {\n        nodes.push(doc.data() as Node);\n      });\n\n      this.setState({ nodes: nodes });\n    });\n\n    // register service worker\n  }\n\n  notifCard = (node: Node) => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          backgroundColor: \"white\",\n          width: \"50%\",\n          maxWidth: 500,\n          padding: 20,\n          borderRadius: 7.5,\n          position: \"absolute\",\n          top: \"5vh\",\n          left: \"30%\",\n        }}\n      >\n        <h1>\n          Notification!<br></br> New Node Data Available\n        </h1>\n        <h2 style={{ marginTop: 10 }}>{node.meta.name}</h2>\n        <div\n          style={{\n            borderRadius: 4,\n            backgroundColor: \"#e0e0e0\",\n            marginTop: 5,\n            padding: 15,\n          }}\n        >\n          <h3>\n            Current Status:\n            <span\n              style={{\n                fontWeight: \"normal\",\n                position: \"absolute\",\n                color: 'red',\n                right: 40,\n              }}\n            >\n              {\" \"}\n              Not Connected\n            </span>\n          </h3>\n          <h3 style={{ marginTop: 5 }}>\n            Latitude:{\" \"}\n            <span\n              style={{\n                fontWeight: \"normal\",\n                position: \"absolute\",\n                right: 40,\n              }}\n            >\n              {node.meta.loc.latitude.toFixed(6)}\n            </span>\n          </h3>\n          <h3 style={{ marginTop: 5 }}>\n            Longitude:{\" \"}\n            <span\n              style={{\n                fontWeight: \"normal\",\n                position: \"absolute\",\n                right: 40,\n              }}\n            >\n              {node.meta.loc.longitude.toFixed(6)}\n            </span>\n          </h3>\n        </div>\n        <div\n          id=\"data\"\n          style={{\n            backgroundColor: \"#0288d1\",\n            borderRadius: 7.5,\n            marginTop: 15,\n            padding: 10,\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <img\n              style={{\n                width: 40,\n                height: 40,\n                marginTop: 10,\n              }}\n              src=\"https://cdn3.iconfinder.com/data/icons/tiny-weather-1/512/sun-512.png\"\n            />\n            <p style={{ paddingTop: 10, paddingLeft: 10, fontWeight: \"bold\" }}>\n              Temperature\n            </p>\n            <div\n              style={{\n                marginTop: 5,\n                position: \"absolute\",\n                right: 30,\n                backgroundColor: \"#ff8a80\",\n                padding: 5,\n                paddingTop: 7,\n                paddingBottom: 7,\n                borderRadius: 10,\n              }}\n            >\n              <p style={{ color: \"white\", fontWeight: \"bold\" }}>\n                {node.log[node.log.length - 1].temp.toFixed(2)}°C\n              </p>\n            </div>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <img\n              style={{\n                width: 40,\n                height: 40,\n                marginTop: 10,\n              }}\n              src=\"https://cdn3.iconfinder.com/data/icons/tiny-weather-1/512/rain-512.png\"\n            />\n            <p style={{ paddingTop: 10, paddingLeft: 10, fontWeight: \"bold\" }}>\n              Humidity\n            </p>\n            <div\n              style={{\n                marginTop: 5,\n                position: \"absolute\",\n                right: 30,\n                backgroundColor: \"#82b1ff\",\n                padding: 5,\n                paddingTop: 7,\n                paddingBottom: 7,\n                borderRadius: 10,\n              }}\n            >\n              <p style={{ color: \"white\", fontWeight: \"bold\" }}>\n                {\" \"}\n                {node.log[node.log.length - 1].humidity.toFixed(2)}%\n              </p>\n            </div>\n          </div>{\" \"}\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <img\n              style={{\n                width: 40,\n                height: 40,\n                marginTop: 10,\n              }}\n              src=\"https://cdn4.iconfinder.com/data/icons/the-weather-is-nice-today/64/weather_10-512.png\"\n            />\n            <p style={{ paddingTop: 10, paddingLeft: 10, fontWeight: \"bold\" }}>\n              Air Quality (CO2)\n            </p>\n            <div\n              style={{\n                marginTop: 5,\n                position: \"absolute\",\n                right: 30,\n                backgroundColor: \"#69f0ae\",\n                padding: 5,\n                paddingTop: 7,\n                paddingBottom: 7,\n                borderRadius: 10,\n              }}\n            >\n              <p style={{ color: \"white\", fontWeight: \"bold\" }}>\n                {node.log[node.log.length - 1].co2.toFixed(2)}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginTop: 10,\n            padding: 15,\n            backgroundColor: colors.blue.light,\n            borderRadius: 5,\n          }}\n          onClick={() => {\n            this.setState({ notification: undefined });\n          }}\n        >\n          <h2 style={{ color: \"white\" }}>Close</h2>\n        </div>\n      </div>\n    );\n  };\n\n  card = () => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          backgroundColor: \"white\",\n          width: \"30%\",\n          maxWidth: 300,\n          padding: 20,\n          margin: 20,\n          borderRadius: 7.5,\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n        }}\n      >\n        <h1>Explore</h1>\n        <h2 style={{ marginTop: 10 }}>\n          {this.state.nodes[this.state.selectedNodeIndex].meta.name}\n        </h2>\n        <div\n          style={{\n            borderRadius: 4,\n            backgroundColor: \"#e0e0e0\",\n            marginTop: 5,\n            padding: 15,\n          }}\n        >\n          <h3>\n            Current Status:\n            <span\n              style={{\n                fontWeight: \"normal\",\n                position: \"absolute\",\n                right: 40,\n                color: 'red'\n              }}\n            >\n              {\" \"}\n              Not Connected\n            </span>\n          </h3>\n          <h3 style={{ marginTop: 5 }}>\n            Latitude:{\" \"}\n            <span\n              style={{\n                fontWeight: \"normal\",\n                position: \"absolute\",\n                right: 40,\n              }}\n            >\n              {this.state.nodes[\n                this.state.selectedNodeIndex\n              ]?.meta.loc.latitude.toFixed(6)}\n            </span>\n          </h3>\n          <h3 style={{ marginTop: 5 }}>\n            Longitude:{\" \"}\n            <span\n              style={{\n                fontWeight: \"normal\",\n                position: \"absolute\",\n                right: 40,\n              }}\n            >\n              {this.state.nodes[\n                this.state.selectedNodeIndex\n              ].meta.loc.longitude.toFixed(6)}\n            </span>\n          </h3>\n        </div>\n        <div\n          id=\"data\"\n          style={{\n            backgroundColor: \"#0288d1\",\n            borderRadius: 7.5,\n            marginTop: 15,\n            padding: 10,\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <img\n              style={{\n                width: 40,\n                height: 40,\n                marginTop: 10,\n              }}\n              src=\"https://cdn3.iconfinder.com/data/icons/tiny-weather-1/512/sun-512.png\"\n            />\n            <p style={{ paddingTop: 10, paddingLeft: 10, fontWeight: \"bold\" }}>\n              Temperature\n            </p>\n            <div\n              style={{\n                marginTop: 5,\n                position: \"absolute\",\n                right: 30,\n                backgroundColor: \"#ff8a80\",\n                padding: 5,\n                paddingTop: 7,\n                paddingBottom: 7,\n                borderRadius: 10,\n              }}\n            >\n              <p style={{ color: \"white\", fontWeight: \"bold\" }}>\n                {this.state.nodes[this.state.selectedNodeIndex].log[\n                  this.state.nodes[this.state.selectedNodeIndex].log.length - 1\n                ].temp.toFixed(2)}\n                °C\n              </p>\n            </div>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <img\n              style={{\n                width: 40,\n                height: 40,\n                marginTop: 10,\n              }}\n              src=\"https://cdn3.iconfinder.com/data/icons/tiny-weather-1/512/rain-512.png\"\n            />\n            <p style={{ paddingTop: 10, paddingLeft: 10, fontWeight: \"bold\" }}>\n              Humidity\n            </p>\n            <div\n              style={{\n                marginTop: 5,\n                position: \"absolute\",\n                right: 30,\n                backgroundColor: \"#82b1ff\",\n                padding: 5,\n                paddingTop: 7,\n                paddingBottom: 7,\n                borderRadius: 10,\n              }}\n            >\n              <p style={{ color: \"white\", fontWeight: \"bold\" }}>\n                {\" \"}\n                {this.state.nodes[this.state.selectedNodeIndex].log[\n                  this.state.nodes[this.state.selectedNodeIndex].log.length - 1\n                ].humidity.toFixed(2)}\n                %\n              </p>\n            </div>\n          </div>{\" \"}\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <img\n              style={{\n                width: 40,\n                height: 40,\n                marginTop: 10,\n              }}\n              src=\"https://cdn4.iconfinder.com/data/icons/the-weather-is-nice-today/64/weather_10-512.png\"\n            />\n            <p style={{ paddingTop: 10, paddingLeft: 10, fontWeight: \"bold\" }}>\n              Air Quality (CO2)\n            </p>\n            <div\n              style={{\n                marginTop: 5,\n                position: \"absolute\",\n                right: 30,\n                backgroundColor: \"#69f0ae\",\n                padding: 5,\n                paddingTop: 7,\n                paddingBottom: 7,\n                borderRadius: 10,\n              }}\n            >\n              <p style={{ color: \"white\", fontWeight: \"bold\" }}>\n                {this.state.nodes[this.state.selectedNodeIndex].log[\n                  this.state.nodes[this.state.selectedNodeIndex].log.length - 1\n                ].co2.toFixed(2)}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  randInRange = (start: number, end: number) => {\n    return Math.random() * (end - start) + start;\n  };\n\n  skewedRandInRange = (start: number, end: number) => {\n    return Math.pow(Math.random(), 10) * (end - start) + start;\n  };\n\n  simulate = () => {\n    // generate a bunch of nodes\n    let nodes: Node[] = [];\n    let startLat = 31.7,\n      endLat = 31.9;\n    let startLon = -83,\n      endLon = -82.7;\n    let n = 25;\n    for (var i = 0; i < n; i++) {\n      let lat = this.randInRange(startLat, endLat);\n      let lon = this.randInRange(startLon, endLon);\n      let log: LogItem[] = [];\n      for (var j = 0; j < this.randInRange(1, 3); j++) {\n        let temp = this.skewedRandInRange(30, 200);\n        let humidity = this.randInRange(30, 100);\n        let airquality = temp * 150;\n        log.push({\n          co2: airquality,\n          humidity: humidity,\n          temp: temp,\n          timestamp: Date.now(),\n          status: 1,\n          collector_id: this.randInRange(1, 3),\n          sender_id: this.randInRange(1, n),\n        });\n      }\n      let color = colors.blue;\n      if (log[log.length - 1].temp > tempThreshold) {\n        color = colors.red;\n      }\n      nodes.push({\n        meta: {\n          loc: {\n            latitude: lat,\n            longitude: lon,\n          },\n          name: \"Node \" + i,\n        },\n        log: log,\n        color: color,\n      });\n    }\n    this.setState({ nodes: nodes });\n  };\n\n  createGraph = (): GraphNode => {\n    return createGraph(this.state.selectedNodeIndex, this.state.nodes);\n  };\n\n  simulateGraphProp = async () => {\n    let graph = this.createGraph();\n    let q: GraphNode[] = [];\n    q.push(graph);\n    type Visits = {\n      [index: string]: boolean;\n    };\n    let visited: Visits = {};\n    while (q.length > 0) {\n      let node = q.shift();\n      let edges = node?.edges;\n\n      // set all edge colors to new color\n      let current = this.state.nodes;\n      let ct = 0;\n      edges?.forEach((val, ind) => {\n        if (!visited[val.data.meta.name]) {\n          current[val.index].color = colors.green;\n          q.push(val);\n          visited[val.data.meta.name] = true;\n          ct += 1;\n        } else {\n          current[val.index].color = colors.orange;\n        }\n      });\n      this.setState({ nodes: current });\n      if (ct > 0) {\n        await new Promise((resolve) => setTimeout(resolve, 500));\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div style={{ height: \"100vh\" }} className=\"Home\">\n        <Map\n          bootstrapURLKeys={{ key: apiKey }}\n          defaultCenter={location}\n          defaultZoom={zoomLevel}\n          options={mapOptions}\n          onClick={(val) => {}}\n        >\n          {this.state.nodes.map((val, ind, arr) => {\n            return (\n              <Marker\n                lat={val.meta.loc.latitude}\n                lng={val.meta.loc.longitude}\n                name={val.meta.name}\n                node={val}\n                color=\"#80d8ff\"\n                onPress={() => {\n                  let current = this.state.nodes;\n                  let prevColor = this.state.prevColor;\n                  if (this.state.selectedNodeIndex != -1 && prevColor) {\n                    current[this.state.selectedNodeIndex].color = prevColor;\n                  }\n                  if (current[ind].color) {\n                    prevColor = current[ind].color;\n                  } else {\n                    prevColor = colors.blue;\n                  }\n                  current[ind].color = colors.green;\n\n                  this.setState({\n                    nodes: current,\n                    selectedNodeIndex: ind,\n                    prevColor: prevColor,\n                  });\n                }}\n              />\n            );\n          })}\n        </Map>\n        <div\n          style={{\n            padding: 20,\n            borderRadius: 10,\n            position: \"absolute\",\n            bottom: 30,\n            left: 30,\n            backgroundColor: \"#0091ea\",\n          }}\n          onClick={() => {\n            this.simulate();\n          }}\n        >\n          <h1 style={{ fontWeight: \"bold\", color: \"white\" }}>Simulate</h1>\n        </div>\n        <div\n          style={{\n            padding: 20,\n            borderRadius: 10,\n            position: \"absolute\",\n            bottom: 30,\n            left: 200,\n            backgroundColor: \"#0091ea\",\n          }}\n          onClick={() => {\n            this.simulateGraphProp();\n          }}\n        >\n          <h1 style={{ fontWeight: \"bold\", color: \"white\" }}>Propogate</h1>\n        </div>\n\n        {this.state.selectedNodeIndex >= 0 ? this.card() : undefined}\n        {this.state.notification\n          ? this.notifCard(this.state.notification)\n          : undefined}\n      </div>\n    );\n  }\n}\n\nfunction mapOptions(maps: Maps): MapOptions {\n  return {\n    streetViewControl: false,\n    scaleControl: false,\n    fullscreenControl: false,\n    panControl: false,\n    draggable: true,\n    styles: [\n      {\n        featureType: \"poi.business\",\n        elementType: \"labels\",\n        stylers: [\n          {\n            visibility: \"off\",\n          },\n        ],\n      },\n    ],\n    gestureHandling: \"greedy\",\n    disableDoubleClickZoom: true,\n    minZoom: 11,\n    maxZoom: 18,\n    draggableCursor: \"default\",\n    draggingCursor: \"default\",\n    mapTypeControl: true,\n    mapTypeId: maps.MapTypeId.SATELLITE,\n    mapTypeControlOptions: {\n      style: maps.MapTypeControlStyle.HORIZONTAL_BAR,\n      position: maps.ControlPosition.BOTTOM_CENTER,\n      mapTypeIds: [],\n    },\n\n    zoomControl: false,\n    clickableIcons: false,\n  };\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Route, Router, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport Launch from \"./screens/Launch\";\nimport { createBrowserHistory } from \"history\";\nimport Home from \"./screens/Home\";\n\nfunction App() {\n  return (\n    <Router history={createBrowserHistory()}>\n      <div>\n        <Route path=\"/\" exact component={Launch} />\n        <Route path=\"/home\" component={Home} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}